[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "inventory-forecasting"
version = "0.1.0"
description = "Inventory forecasting system using XGBoost and multi-series time series analysis"
requires-python = ">=3.12"
license = {text = "Proprietary"}
authors = [
    {name = "Your Company", email = "admin@company.com"},
]
keywords = ["inventory", "forecasting", "machine-learning", "xgboost", "time-series"]

dependencies = [
    # Core ML and data processing
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "xgboost>=2.0.0",
    "skforecast>=0.11.0",
    "feature-engine>=1.6.0",
    # Database
    "mysql-connector-python>=8.0.0",
    # Configuration and environment
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    # Time series and statistics
    "statsmodels>=0.14.0",
    "scipy>=1.11.0",
    # Reporting and visualization
    "openpyxl>=3.1.0",
    "jinja2>=3.1.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    # API (optional)
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    # Utilities
    "click>=8.1.0",
    "tqdm>=4.66.0",
    "lightgbm>=4.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "ipykernel>=6.25.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
]

[project.scripts]
inventory-forecast = "src.main:main"

[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]
